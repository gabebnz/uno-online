.BoardWrapper{
    display: grid;

    height:100%;
    width:100%;

    grid-template-columns:minmax(0, 1fr) minmax(0,2fr) minmax(0,1fr);
    grid-template-rows: minmax(0, 1fr) minmax(0,2fr) minmax(0,1fr);

    overflow:hidden;

    animation: fade-in 0.4s cubic-bezier(0.390, 0.575, 0.565, 1.000) 0.1s backwards;


}

.HandWrapper{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    
    grid-column: 2;
    grid-row: 2/4;

    z-index: 5;

    filter: drop-shadow(0px 5px 15px rgba(0, 0, 0, 0.089));

    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    
    transform: perspective(1000px)  rotateX(15deg);
    
    width:100%;
    height:100%;
}

.TopHandWrapper{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    justify-self: center;
    align-self: center;

    max-width: 60%;
   
    grid-column: 2;
    grid-row: 1;

    filter: drop-shadow(0px 25px 20px rgba(0, 0, 0, 0.158));
    transform: perspective(2000px)  rotateX(-25deg) scale(0.8);

    width:100%;
    height:100%;


}



.RightHandWrapper{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;

    grid-column: 3;
    grid-row: 2;

    max-width: 100%;
    margin-left: -300px;
    margin-top: -100px;

    justify-self: center;
    align-self: center;

    filter: drop-shadow(40px 15px 30px rgba(0, 0, 0, 0.096));
    transform: perspective(2000px)  rotateX(-15deg) rotateY(-25deg) scale(0.9);

    width:100%;
    height:100%;

}

.LeftHandWrapper{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;

    grid-column: 1;
    grid-row: 2;

    max-width: 100%;
    margin-left: 300px;
    margin-top: -100px;

    justify-self: center;
    align-self: center;

    filter: drop-shadow(-40px 15px 30px rgba(0, 0, 0, 0.089));

    transform: perspective(2000px)  rotateX(-15deg) rotateY(25deg) scale(0.9);

    width:100%;
    height:100%;

}



.InnerBoard {
    display: flex;
    flex-wrap: wrap;


    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;

    justify-content: center;
    align-items: center;

    border-radius: 50%;

    width:100%;
    height:100%;
    position: relative;

    z-index: 2;
}

.DiscardWrapper{
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    
    border-radius: 50%;
    
    height: 25%;
    width: 25%;
}



.InnerBoardBorder{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    position:relative;
    border-radius: 50%;
    overflow: hidden;

    aspect-ratio: 1/1;

    width: 80%;
    box-shadow: rgba(0, 0, 0, 0.2) 0px 60px 40px -7px;
    transition: box-shadow 0.7s;
}

@media screen and (max-width: 800px) {
    .InnerBoardBorder{
        width: 100%;
    }

    .DiscardWrapper{
        width:35%;
        height:35%;
    }
}
    

.GreenGlow{
    box-shadow: rgba(var(--game-color-green-v), 0.7) 0px 60px 40px -7px;
}

.BlueGlow{
    box-shadow: rgba(var(--game-color-blue-v), 0.4) 0px 60px 40px -7px;
}

.RedGlow{
    box-shadow: rgba(var(--game-color-red-v), 0.4) 0px 60px 40px -7px;
}

.YellowGlow{
    box-shadow: rgba(var(--game-color-yellow-v), 0.4) 0px 60px 40px -7px;
}

.WildGlow{
    box-shadow: rgba(var(--game-color-wild-v), 0.4) 0px 60px 40px -7px;
}

.Defaultglow{
    box-shadow: rgba(0, 0, 0, 0.2) 0px 60px 40px -7px;
}

.InnerBoardWrapper{
    grid-column: 2;
    grid-row: 2;

    display:flex;
    justify-content: center;
    align-items: center;

    grid-column: 2;
    grid-row: 2;

    transform: perspective(2000px)  rotateX(53deg) ;

    margin-top:-90px;
    width:100%;
    height:100%;

    transition-delay: 0.5s;
    transition: background 0.5s;

    z-index:-1;

}


.InnerBoardBorder[class~="red"]::before{
    background: var(--game-color-red);
}
.InnerBoardBorder[class~="blue"]::before{
    background: var(--game-color-blue);
}
.InnerBoardBorder[class~="green"]::before{
    background: var(--game-color-green);
}
.InnerBoardBorder[class~="yellow"]::before{
    background: var(--game-color-yellow);
}
.InnerBoardBorder[class~="wild"]::before{
    background: var(--game-color-wild);
}

.InnerBoardBorder[class~="false"]::before{
    animation: rotate-reverse 10s linear infinite;
}

.InnerBoardBorder[class~="true"]::before{
    animation: rotate 10s linear infinite;
}

.InnerBoardBorder::before{
    content: "";
    position: absolute;
    width: 25px; /* width of the spinning circle bars */
    height: 100%; /* make sure this is very long */
    transition: background 0.5s;

}

.InnerBoardBorder::after{
    content: "";
    position: absolute;
    background-color: var(--bg-color);

    inset:15px;
    border-radius: 50%;
}





.UnoButtonWrapper{
    display: flex;
    width:100%;
    min-width:0;
    height:100%;

    grid-column: 3;
    grid-row: 3;

    justify-content: center;
    align-items: center;



    margin-top: -30px;
    margin-left: -200px;
    
	animation: slide-in-blurred-left 0.6s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
    z-index: 10;
}




.UnoButton{
    display: flex;
    flex-shrink: 1;

    cursor: pointer;

    transform: perspective(900px)  rotateX(30deg) ;

    border-radius:50%;
    box-shadow: rgba(0, 0, 0, 0.671) 0px 10px 40px 2px;

    width:auto;
    min-width:0;
    height:auto;
    transform-style:preserve-3d;
    justify-content: center;
    align-items: center;
    transition:  ease 0.4s;

}

.UnoButton h1{
    position: absolute;
    font-size: 5rem;
    color: var(--font-color);
    text-shadow: rgba(12, 12, 12, 0.356) 5px 15px 20px;
    z-index: 2;
    
    transform:translateZ(30px);
}



.UnoButton:hover{
    transition: ease  0.4s;
    transform: perspective(900px)  rotateY(-15deg) rotateX(15deg);
    box-shadow: rgba(0, 0, 0, 0.671) 15px 15px 35px 0px;
}


.UnoButtonCircle{
    position:relative;

    border-radius: 50%;
    overflow: hidden;
    aspect-ratio: 1/1;

    height: 17vh;

    transition: box-shadow 0.7s;
    z-index: 1;
}

.UnoButtonCircle::before{
    content: "";
    position: absolute;
    width: 100%; /* width of the spinning circle bars */
    height: 100%; /* make sure this is very long */
    transition: background 0.5s;
    background: conic-gradient(var(--game-color-red) 0% 25%, var(--game-color-blue) 25% 50%, var(--game-color-green) 50% 75%,var(--game-color-yellow) 75% 100%);
    animation: rotate 10s linear infinite;
}

.UnoButtonCircle::after{
    content: "";
    position: absolute;
    background-color: var(--bg-up-color);
    inset:7px;
    border-radius: 50%;
}


/* Breakpoints for alt layout*/
@media only screen and (max-width: 1500px) {
    .InnerBoardBorder{
        width: 60%;
    }
    .RightHandWrapper{
        margin: 0;
        grid-column: 3;
        grid-row: 1;
        scale: 0.8;
    }

    .LeftHandWrapper{
        margin: 0;
        grid-column: 1;
        grid-row: 1;
        scale: 0.8;
    }

    .InnerBoardWrapper{
        grid-column: 1/4;
        margin-top: -20px;
        
    }

    .UnoButtonWrapper{
        margin-top: 0;
        margin-left: 0;

        font-size: 0.75em;

        grid-column: 3;
        grid-row: 2/4;
    }
  }
  @media only screen and (max-width: 800px) {
    .InnerBoardBorder{
        width: 95%;
    }
}




/**
 * ----------------------------------------
 * animation slide-in-blurred-left
 * ----------------------------------------
 */
  @keyframes slide-in-blurred-left {
    0% {
    transform: translateX(-1000px) scaleX(2.5) scaleY(0.2);
    transform-origin: 100% 50%;
    filter: blur(40px);
      opacity: 0;
    }
    100% {
    transform: translateX(0) scaleY(1) scaleX(1);
    transform-origin: 50% 50%;
    filter: blur(0);
      opacity: 1;
    }
  }
  


  


@keyframes rotate {
    from {
        transform: rotate(0deg);
      }
    to {
        transform: rotate(360deg);
    }
}
@keyframes rotate-reverse {
    from {
        transform: rotate(360deg);
      }
    to {
        transform: rotate(0deg);
    }
}


/**
 * ----------------------------------------
 * animation fade-in
 * ----------------------------------------
 */
 @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }